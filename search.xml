<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>杭电多校5</title>
      <link href="/undefined/16891.html"/>
      <url>/undefined/16891.html</url>
      
        <content type="html"><![CDATA[<h2 id="1001-Typhoon"><a href="#1001-Typhoon" class="headerlink" title="1001  Typhoon"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=7324">1001  Typhoon</a></h2><p>题意：给定台风的路径（用$m$个点表示$m-1$条线段）和n个避难所的坐标，求每个点到台风的最短距离。</p><p>解法：暴力枚举每个坐标到每条边的最小值。</p><p>启示：你也许需要一个计算几何的板子orz</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="type">double</span> x,y;</span><br><span class="line">    <span class="built_in">Point</span>(<span class="type">double</span> x=<span class="number">0</span>,<span class="type">double</span> y=<span class="number">0</span>):<span class="built_in">x</span>(x),<span class="built_in">y</span>(y) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//向量加法</span></span><br><span class="line">    Point <span class="keyword">operator</span>+(Point p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x+p.x,y+p.y);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//向量减法</span></span><br><span class="line">    Point <span class="keyword">operator</span>-(Point p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x-p.x,y+p.y);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//向量伸缩</span></span><br><span class="line">    Point <span class="keyword">operator</span>*(<span class="type">double</span> a)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x*a,y*a);</span><br><span class="line">    &#125;</span><br><span class="line">    Point <span class="keyword">operator</span>/(<span class="type">double</span> a)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x/a,y/a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//向量大小</span></span><br><span class="line">    <span class="function"><span class="type">double</span> <span class="title">abs</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sqrt</span>(<span class="built_in">norm</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//向量范数</span></span><br><span class="line">    <span class="function"><span class="type">double</span> <span class="title">norm</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x*x+y*y;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span>&lt;(<span class="type">const</span> Point &amp;p) <span class="type">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> x!=p.x?x&lt;p.x:y&lt;p.y;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span>==(<span class="type">const</span> Point &amp;p)<span class="type">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> x-p.x&lt;<span class="number">1e-10</span>&amp;&amp;y-p.y&lt;<span class="number">1e-10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> Point Vector;</span><br><span class="line"></span><br><span class="line"><span class="comment">//向量内积</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">dot</span><span class="params">(Vector a,Vector b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.x*b.x+a.y*b.y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//向量外积</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">cross</span><span class="params">(Vector a,Vector b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">abs</span>(a.x*b.y-a.y*b.x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//正交</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isOrthogonal</span><span class="params">(Vector a,Vector b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.x*b.x+a.y*b.y==<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//平行</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isParallel</span><span class="params">(Vector a,Vector b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.x*b.y-a.y*b.x==<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//投影</span></span><br><span class="line"><span class="function">Point <span class="title">project</span><span class="params">(Point a,Point b,Point c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">Vector <span class="title">ab</span><span class="params">(b.x-a.x,b.y-a.y)</span></span>;</span><br><span class="line">    <span class="function">Vector <span class="title">ac</span><span class="params">(c.x-a.x,c.y-a.y)</span></span>;</span><br><span class="line">    <span class="type">double</span>  r=<span class="built_in">dot</span>(ab,ac)/ab.<span class="built_in">norm</span>();<span class="comment">//比例</span></span><br><span class="line">    <span class="function">Vector <span class="title">h</span><span class="params">(ab*r)</span></span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Point</span>(a.x+h.x,a.y+h.y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//映象</span></span><br><span class="line"></span><br><span class="line"><span class="function">Point <span class="title">reflect</span><span class="params">(Point a,Point b,Point c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//c到ab的投影点</span></span><br><span class="line">    Point r=<span class="built_in">project</span>(a,b,c);</span><br><span class="line">    <span class="function">Vector <span class="title">cr</span><span class="params">(r.x-c.x,r.y-c.y)</span></span>;</span><br><span class="line">    <span class="comment">//cr扩大二倍</span></span><br><span class="line">    Vector cr_2=cr*<span class="number">2</span>;<span class="comment">//上面重载过*</span></span><br><span class="line">    <span class="comment">//向量加法</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Point</span>(c.x+cr_2.x,c.y+cr_2.y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//两点间距离</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">getDistancePP</span><span class="params">(Point a,Point b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">Point <span class="title">c</span><span class="params">(b.x-a.x,b.y-a.y)</span></span>;</span><br><span class="line">    <span class="keyword">return</span>  c.<span class="built_in">abs</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//点到直线距离(利用外积平行四边形)</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">getDistancePL</span><span class="params">(Point a,Point b,Point c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">Vector <span class="title">ab</span><span class="params">(b.x-a.x,b.y-a.y)</span></span>;</span><br><span class="line">    <span class="function">Vector <span class="title">ac</span><span class="params">(c.x-a.x,c.y-a.y)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">cross</span>(ab,ac)/ab.<span class="built_in">abs</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//点到线段距离</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">getDistancePS</span><span class="params">(Point a,Point b,Point c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//定义4个向量</span></span><br><span class="line">    <span class="function">Vector <span class="title">ab</span><span class="params">(b.x-a.x,b.y-a.y)</span></span>;</span><br><span class="line">    <span class="function">Vector <span class="title">ba</span><span class="params">(a.x-b.x,a.y-b.y)</span></span>;</span><br><span class="line">    <span class="function">Vector <span class="title">ac</span><span class="params">(c.x-a.x,c.y-a.y)</span></span>;</span><br><span class="line">    <span class="function">Vector <span class="title">bc</span><span class="params">(c.x-b.x,c.y-b.y)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">dot</span>(ab,ac)&lt;<span class="number">0.0</span>) <span class="keyword">return</span> <span class="built_in">getDistancePP</span>(a,c);</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">dot</span>(ba,bc)&lt;<span class="number">0.0</span>) <span class="keyword">return</span> <span class="built_in">getDistancePP</span>(b,c);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">getDistancePL</span>(a,b,c);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;m, &amp;n);</span><br><span class="line">    vector&lt;Point&gt; P, S;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i ++)&#123;</span><br><span class="line">        <span class="type">int</span> x, y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">        P.<span class="built_in">push_back</span>(<span class="built_in">Point</span>(x, y));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="type">int</span> x, y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">        S.<span class="built_in">push_back</span>(<span class="built_in">Point</span>(x, y));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">double</span>&gt; <span class="title">ans</span><span class="params">(n + <span class="number">5</span>, <span class="number">1.0</span> * <span class="number">1e14</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; m - <span class="number">1</span>; j ++)&#123;</span><br><span class="line">            <span class="comment">// cout &lt;&lt; S[j].x &lt;&lt; &quot; &quot; &lt;&lt; S[j].y &lt;&lt; endl;</span></span><br><span class="line">            <span class="type">double</span> now = <span class="built_in">getDistancePS</span>(P[j], P[j + <span class="number">1</span>], S[i]);</span><br><span class="line">            <span class="comment">// cout &lt;&lt; now &lt;&lt; endl;</span></span><br><span class="line">            ans[i] = <span class="built_in">min</span>(ans[i], now);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++) <span class="built_in">printf</span>(<span class="string">&quot;%.4lf\n&quot;</span>, ans[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1006-Touhou-Red-Red-Blue"><a href="#1006-Touhou-Red-Red-Blue" class="headerlink" title="1006 Touhou Red Red Blue"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=7329">1006 Touhou Red Red Blue</a></h2><p>题意：每次给一个ufo，每个ufo有不同的颜色，可以选择取或不取，如果取，遵循以下规则：</p><p>1.如果bag1为空，放进bag1</p><p>2.如果bag1非空，bag2空，放进bag2</p><p>3.如果bag1和bag2都非空，则</p><p>​    1）如果三种物品颜色全部相同，将他们全部消去，并获得一个自定义颜色的ufo在bag1中，分数+1。</p><p>​    2）如果三种物品颜色全部不同，将他们全部消去，获得两个自定义颜色的ufo在bag1和bag2中。</p><p>​    3）否则，将bag1中的物品移除，将bag2中的物品放入bag1，将现有物品放入bag2。</p><p>解法：dp。初始化全部计为负无穷，考虑只取1，只取2和12都取的情况，初始化为0。</p><p>​        每次先从上一状态完整继承下来，表示当前位置不取的情况。</p><p>​        更新三种颜色相同的情况，此时颜色可以为三种中的任意，所以对三种都进行更新。</p><p>​        更新3种以当前颜色结尾的情况，即上述3）。</p><p>​        更新三种颜色不同的情况，将所有包含两种颜色的情况更新。</p><p>最后枚举$n$位置上所有可能的情况即可。</p><p>另外此题可以贪心。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> dp[N][<span class="number">15</span>];</span><br><span class="line"><span class="comment">//1  10 </span></span><br><span class="line"><span class="comment">//2  20</span></span><br><span class="line"><span class="comment">//3  30</span></span><br><span class="line"><span class="comment">//4  11</span></span><br><span class="line"><span class="comment">//5  12</span></span><br><span class="line"><span class="comment">//6  13</span></span><br><span class="line"><span class="comment">//7  21</span></span><br><span class="line"><span class="comment">//8  22</span></span><br><span class="line"><span class="comment">//9  23</span></span><br><span class="line"><span class="comment">//10 31</span></span><br><span class="line"><span class="comment">//11 32</span></span><br><span class="line"><span class="comment">//12 33</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string s;</span><br><span class="line">cin&gt;&gt;s;</span><br><span class="line"><span class="type">int</span> n=s.<span class="built_in">size</span>();</span><br><span class="line">s=<span class="string">&#x27;?&#x27;</span>+s;</span><br><span class="line"><span class="built_in">rep</span>(i,<span class="number">1</span>,<span class="number">12</span>)</span><br><span class="line">&#123;</span><br><span class="line">dp[<span class="number">2</span>][i]=-inf;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> pos1=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> pos2=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(s[<span class="number">1</span>]==<span class="string">&#x27;R&#x27;</span>)pos1=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(s[<span class="number">1</span>]==<span class="string">&#x27;G&#x27;</span>)pos1=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(s[<span class="number">1</span>]==<span class="string">&#x27;B&#x27;</span>)pos1=<span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(s[<span class="number">2</span>]==<span class="string">&#x27;R&#x27;</span>)pos2=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(s[<span class="number">2</span>]==<span class="string">&#x27;G&#x27;</span>)pos2=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(s[<span class="number">2</span>]==<span class="string">&#x27;B&#x27;</span>)pos2=<span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">dp[<span class="number">2</span>][pos1*<span class="number">3</span>+pos2]=<span class="number">0</span>;</span><br><span class="line">dp[<span class="number">2</span>][pos1]=<span class="number">0</span>;</span><br><span class="line">dp[<span class="number">2</span>][pos2]=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">//初始化</span></span><br><span class="line"><span class="built_in">rep</span>(i,<span class="number">3</span>,n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">rep</span>(j,<span class="number">1</span>,<span class="number">12</span>)<span class="comment">//当前不取，从上一状态直接继承</span></span><br><span class="line">&#123;</span><br><span class="line">dp[i][j]=dp[i<span class="number">-1</span>][j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="string">&#x27;R&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">dp[i][<span class="number">1</span>]=<span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">4</span>]+<span class="number">1</span>,dp[i][<span class="number">1</span>]);</span><br><span class="line">dp[i][<span class="number">2</span>]=<span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">4</span>]+<span class="number">1</span>,dp[i][<span class="number">1</span>]);</span><br><span class="line">dp[i][<span class="number">3</span>]=<span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">4</span>]+<span class="number">1</span>,dp[i][<span class="number">1</span>]);</span><br><span class="line"><span class="comment">//三个相同，全消去，答案更新</span></span><br><span class="line">dp[i][<span class="number">4</span>]=<span class="built_in">max</span>(&#123;dp[i<span class="number">-1</span>][<span class="number">1</span>],dp[i<span class="number">-1</span>][<span class="number">7</span>],dp[i<span class="number">-1</span>][<span class="number">10</span>],dp[i<span class="number">-1</span>][<span class="number">4</span>]&#125;);</span><br><span class="line">dp[i][<span class="number">7</span>]=<span class="built_in">max</span>(&#123;dp[i<span class="number">-1</span>][<span class="number">11</span>],dp[i<span class="number">-1</span>][<span class="number">8</span>],dp[i<span class="number">-1</span>][<span class="number">5</span>],dp[i<span class="number">-1</span>][<span class="number">2</span>]&#125;);</span><br><span class="line">dp[i][<span class="number">10</span>]=<span class="built_in">max</span>(&#123;dp[i<span class="number">-1</span>][<span class="number">12</span>],dp[i<span class="number">-1</span>][<span class="number">9</span>],dp[i<span class="number">-1</span>][<span class="number">6</span>],dp[i<span class="number">-1</span>][<span class="number">3</span>]&#125;);</span><br><span class="line"><span class="comment">//末尾为1的所有情况</span></span><br><span class="line"><span class="type">int</span> tmp=<span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">9</span>],dp[i<span class="number">-1</span>][<span class="number">11</span>]);<span class="comment">//三个不同，4-12都可以从这里继承</span></span><br><span class="line"><span class="built_in">rep</span>(j,<span class="number">4</span>,<span class="number">12</span>)</span><br><span class="line">&#123;</span><br><span class="line">dp[i][j]=<span class="built_in">max</span>(dp[i][j],tmp);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="string">&#x27;G&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">dp[i][<span class="number">1</span>]=<span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">8</span>]+<span class="number">1</span> ,dp[i][<span class="number">1</span>]);</span><br><span class="line">dp[i][<span class="number">2</span>]=<span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">8</span>]+<span class="number">1</span> ,dp[i][<span class="number">2</span>]);</span><br><span class="line">dp[i][<span class="number">3</span>]=<span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">8</span>]+<span class="number">1</span> ,dp[i][<span class="number">3</span>]);</span><br><span class="line">dp[i][<span class="number">5</span>]=<span class="built_in">max</span>(&#123;dp[i<span class="number">-1</span>][<span class="number">1</span>],dp[i<span class="number">-1</span>][<span class="number">7</span>],dp[i<span class="number">-1</span>][<span class="number">10</span>],dp[i<span class="number">-1</span>][<span class="number">4</span>]&#125;);</span><br><span class="line">dp[i][<span class="number">8</span>]=<span class="built_in">max</span>(&#123;dp[i<span class="number">-1</span>][<span class="number">11</span>],dp[i<span class="number">-1</span>][<span class="number">8</span>],dp[i<span class="number">-1</span>][<span class="number">5</span>],dp[i<span class="number">-1</span>][<span class="number">2</span>]&#125;);</span><br><span class="line">dp[i][<span class="number">11</span>]=<span class="built_in">max</span>(&#123;dp[i<span class="number">-1</span>][<span class="number">12</span>],dp[i<span class="number">-1</span>][<span class="number">9</span>],dp[i<span class="number">-1</span>][<span class="number">6</span>],dp[i<span class="number">-1</span>][<span class="number">3</span>]&#125;);</span><br><span class="line"><span class="type">int</span> tmp=<span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">6</span>],dp[i<span class="number">-1</span>][<span class="number">10</span>]);</span><br><span class="line"><span class="built_in">rep</span>(j,<span class="number">4</span>,<span class="number">12</span>)</span><br><span class="line">&#123;</span><br><span class="line">dp[i][j]=<span class="built_in">max</span>(dp[i][j],tmp);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="string">&#x27;B&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">dp[i][<span class="number">1</span>]=<span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">12</span>]+<span class="number">1</span> ,dp[i][<span class="number">1</span>]);</span><br><span class="line">dp[i][<span class="number">2</span>]=<span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">12</span>]+<span class="number">1</span> ,dp[i][<span class="number">2</span>]);</span><br><span class="line">dp[i][<span class="number">3</span>]=<span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">12</span>]+<span class="number">1</span> ,dp[i][<span class="number">3</span>]);</span><br><span class="line">dp[i][<span class="number">6</span>]=<span class="built_in">max</span>(&#123;dp[i<span class="number">-1</span>][<span class="number">1</span>],dp[i<span class="number">-1</span>][<span class="number">7</span>],dp[i<span class="number">-1</span>][<span class="number">10</span>],dp[i<span class="number">-1</span>][<span class="number">4</span>]&#125;);</span><br><span class="line">dp[i][<span class="number">9</span>]=<span class="built_in">max</span>(&#123;dp[i<span class="number">-1</span>][<span class="number">11</span>],dp[i<span class="number">-1</span>][<span class="number">8</span>],dp[i<span class="number">-1</span>][<span class="number">5</span>],dp[i<span class="number">-1</span>][<span class="number">2</span>]&#125;);</span><br><span class="line">dp[i][<span class="number">12</span>]=<span class="built_in">max</span>(&#123;dp[i<span class="number">-1</span>][<span class="number">12</span>],dp[i<span class="number">-1</span>][<span class="number">9</span>],dp[i<span class="number">-1</span>][<span class="number">6</span>],dp[i<span class="number">-1</span>][<span class="number">3</span>]&#125;);</span><br><span class="line"><span class="type">int</span> tmp=<span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">5</span>],dp[i<span class="number">-1</span>][<span class="number">7</span>]);</span><br><span class="line"><span class="built_in">rep</span>(j,<span class="number">4</span>,<span class="number">12</span>)</span><br><span class="line">&#123;</span><br><span class="line">dp[i][j]=<span class="built_in">max</span>(dp[i][j],tmp);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">rep</span>(i,<span class="number">1</span>,<span class="number">12</span>)</span><br><span class="line">&#123;</span><br><span class="line">ans=<span class="built_in">max</span>(ans,dp[n][i]);</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1007-Expectation-Easy-Version"><a href="#1007-Expectation-Easy-Version" class="headerlink" title="1007 Expectation (Easy Version)"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=7330">1007 Expectation (Easy Version)</a></h2><p>题意：给定$n,m,a,b$，每轮有$a/b$的概率胜利，每次胜利可以获得当前胜场的k次的分数，求分数期望。</p><p>解法：由于分数和赢的位置无关，所以只要考虑赢了多少次即可。计算出赢$i$场的概率为$C(i,n)<em>a/b </em>C(n-i,n)*(b-a)/b$,每场的胜利的分数为$pre[i]=pre[i-1]+pow(i,k)$。注意预处理避免本题超时。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n,m,a,b;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m&gt;&gt;a&gt;&gt;b;</span><br><span class="line"><span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">pre[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">rep</span>(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line">pre[i]=(pre[i<span class="number">-1</span>]+<span class="built_in">qpow</span>(i,m)%mod)%mod;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="type">int</span> inv_b=<span class="built_in">invv</span>(b);</span><br><span class="line"><span class="type">int</span> inv_b_a=<span class="built_in">invv</span>(b-a);</span><br><span class="line">s[<span class="number">0</span>]=<span class="built_in">qpow</span>(b-a,n)*<span class="built_in">qpow</span>(inv_b,n);</span><br><span class="line">s[<span class="number">0</span>]%=mod;</span><br><span class="line"><span class="built_in">rep</span>(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line">s[i]=s[i<span class="number">-1</span>]*a%mod;</span><br><span class="line">s[i]*=inv_b_a;</span><br><span class="line">s[i]%=mod;</span><br><span class="line">&#125;</span><br><span class="line">C[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">rep</span>(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line">C[i]=(C[i<span class="number">-1</span>]%mod*(n-i+<span class="number">1</span>)%mod);</span><br><span class="line">C[i]*=<span class="built_in">qpow</span>(i,mod<span class="number">-2</span>);</span><br><span class="line">C[i]%=mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">rep</span>(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line">ans=(ans+C[i]*s[i]%mod*pre[i]%mod)%mod;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1012-Counting-Stars"><a href="#1012-Counting-Stars" class="headerlink" title="1012 Counting Stars"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=7335">1012 Counting Stars</a></h2><p>题意：定义k+1个点构成的菊花图为kstar图，花瓣不同或花蕊不同即认为是不同的菊花，$cnt<em>k$表示kstar图的数量，求$(cnt_2 )xor (cnt_3)xor ……cnt</em>(n-1)$的值。</p><p>解法：记录每个点的度，计算对对应cnt的贡献即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> fac[N], inv[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">fac[<span class="number">0</span>] = inv[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">fac[<span class="number">1</span>] = inv[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= maxn - <span class="number">9</span>; ++i) <span class="comment">// 一定要从2开始</span></span><br><span class="line">fac[i] = fac[i - <span class="number">1</span>] * i % mod,</span><br><span class="line">inv[i] = (mod - mod / i) * inv[mod % i] % mod;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= maxn - <span class="number">9</span>; ++i)</span><br><span class="line">inv[i] = inv[i] * inv[i - <span class="number">1</span>] % mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">C</span><span class="params">(ll n, ll m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (m &gt; n)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0ll</span>;</span><br><span class="line"><span class="keyword">return</span> fac[n] * inv[m] % mod * inv[n - m] % mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt;<span class="built_in">ans</span>(n+<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">vector&lt;<span class="type">int</span>&gt;<span class="built_in">deg</span>(n+<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">rep</span>(i, <span class="number">1</span>, m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> u,v;</span><br><span class="line">cin&gt;&gt;u&gt;&gt;v;</span><br><span class="line">deg[u]++;</span><br><span class="line">deg[v]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">rep</span>(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">rep</span>(j,<span class="number">2</span>,deg[i])</span><br><span class="line">&#123;</span><br><span class="line">ans[j]+=<span class="built_in">C</span>(deg[i],j);</span><br><span class="line">ans[j]%=mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> anss=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">rep</span>(i,<span class="number">2</span>,n<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">anss^=ans[i];</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;anss&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="1009-Tree"><a href="#1009-Tree" class="headerlink" title="1009  Tree"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=7332">1009  Tree</a></h2><p>题意：给一颗树，告诉你重孩子，对于每一条重链建立树状数组，求最终形成的图形的深度。</p><p>解法：树形dp，待补。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 杭电多校 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>牛客多校5</title>
      <link href="/undefined/63971.html"/>
      <url>/undefined/63971.html</url>
      
        <content type="html"><![CDATA[<h2 id="C-Cheeeeen-the-Cute-Cat"><a href="#C-Cheeeeen-the-Cute-Cat" class="headerlink" title="C Cheeeeen the Cute Cat"></a><a href="https://ac.nowcoder.com/acm/contest/57359/C">C Cheeeeen the Cute Cat</a></h2><p>赛时数据太弱。</p><p>题意：给定一个二分图，图的左右两部均有n个点，对任意$i,j∈[1,n]$，若存在边$(i,j+n)$,则不存在$(j,i+n)$,使用邻接矩阵给出该图的$n*(n-1)/2$，表示$i$到$n+j$条边。问该二分图的最大匹配。</p><p>解法：将$i$到$n+j$的变转化为$i$到$j$的边，这样这个问题就从最大匹配转换为了将点分配到环中。</p><p>此时原图转化为 [竞赛图][<a href="https://cmwqf.github.io/2020/04/22/浅谈竞赛图/">浅谈竞赛图 | cmwqf’s blog</a>]。</p><p>竞赛图的性质，竞赛图里，任意大小为$n&gt;1$的强连通分量中，大小为$[3,n]$的环均存在。</p><p>所以如果能找到孤立的强连通分量，答案为$n-1$，否则答案为$n$。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;<span class="built_in">deg</span>(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> e;</span><br><span class="line">            cin &gt;&gt; e;</span><br><span class="line">            deg[i] += e;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(deg.<span class="built_in">begin</span>(),deg.<span class="built_in">end</span>());</span><br><span class="line">    <span class="type">int</span> s = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>, j = <span class="number">0</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s += deg[i<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">if</span>(s == i*(i<span class="number">-1</span>)/<span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i - j &lt; <span class="number">3</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; n - <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">return</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">            j = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; n &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="D-Cirno’s-Perfect-Equation-Class"><a href="#D-Cirno’s-Perfect-Equation-Class" class="headerlink" title="D Cirno’s Perfect Equation Class"></a><a href="https://ac.nowcoder.com/acm/contest/57359/D">D Cirno’s Perfect Equation Class</a></h2><p>题意：给定$k,c,n$,求满足 $k*a+b=c$ 且 $c$能被$b$整除 且 $gcd(a,b)&gt;=n$</p><p>解法：枚举$c$的因子，将每个因子进行合法性检验，然后统计答案即可。注意特判完全平方数避免重复计数。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; k &gt;&gt; c &gt;&gt; n;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i * i &lt;= c; i ++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(c % i == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">int</span> b = i, bb = c / i;</span><br><span class="line">            <span class="type">int</span> a = (c - b) / k;</span><br><span class="line">            <span class="keyword">if</span>((a * k + b == c) &amp;&amp; (__gcd(a, b) &gt;= n) &amp;&amp; a != <span class="number">0</span>) ans ++;</span><br><span class="line">            a = (c - bb) / k;</span><br><span class="line">            <span class="keyword">if</span>((a * k + bb == c) &amp;&amp; (__gcd(a, bb) &gt;= n) &amp;&amp; bb != b &amp;&amp; a != <span class="number">0</span>) ans ++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="G-Go-to-Play-Maimai-DX"><a href="#G-Go-to-Play-Maimai-DX" class="headerlink" title="G Go to Play Maimai DX"></a><a href="https://ac.nowcoder.com/acm/contest/57359/G">G Go to Play Maimai DX</a></h2><p>题意：给定n个物品，找到满足条件的最短区间。要求必须包含1,2,3物品和k*4个物品。</p><p>解法：尺取法，右指针移动到合法区间后移动左指针至不满足条件，更新答案后继续移动右指针。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> f[<span class="number">1</span>] &amp;&amp; f[<span class="number">2</span>] &amp;&amp; f[<span class="number">3</span>] &amp;&amp; f[<span class="number">4</span>]&gt;=k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line"><span class="built_in">rep</span>(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> l=<span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> ans=n;</span><br><span class="line"><span class="built_in">rep</span>(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line">f[a[i]]++;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">check</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">rep</span>(j,l,i)</span><br><span class="line">&#123;</span><br><span class="line">f[a[j]]--;</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">check</span>())</span><br><span class="line">&#123;</span><br><span class="line">l=j;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ans=<span class="built_in">min</span>(i-l+<span class="number">1</span>,ans);</span><br><span class="line">l++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="H-Nazrin-the-Greeeeeedy-Mouse"><a href="#H-Nazrin-the-Greeeeeedy-Mouse" class="headerlink" title="H Nazrin the Greeeeeedy Mouse"></a><a href="https://ac.nowcoder.com/acm/contest/57359/H">H Nazrin the Greeeeeedy Mouse</a></h2><p>待补</p>]]></content>
      
      
      
        <tags>
            
            <tag> 牛客多校 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>牛客多校4</title>
      <link href="/undefined/14626.html"/>
      <url>/undefined/14626.html</url>
      
        <content type="html"><![CDATA[<p>这场题面很有意思，了解polpot之后再看题面会有不一样的感受。</p><h2 id="A-Bobo-String-Construction"><a href="#A-Bobo-String-Construction" class="headerlink" title="A Bobo String Construction"></a><a href="https://ac.nowcoder.com/acm/contest/57358/A">A Bobo String Construction</a></h2><p>题意：给定识别码t，求长度为n的内容码s，保证t在（t+s+t）的字符串中只出现一次。</p><p>解法：先得到结论，s为全0或全1必定有解，然后直接判断即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    string s1,s2;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s1+=<span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">        s2+=<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    string t,t1,t2;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    t1=t.<span class="built_in">substr</span>(<span class="number">1</span>)+s1+t.<span class="built_in">substr</span>(<span class="number">0</span>,t.<span class="built_in">size</span>()<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">if</span>(t1.<span class="built_in">find</span>(t)!=<span class="number">-1</span>)cout&lt;&lt;s2&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">else</span> cout&lt;&lt;s1&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="F-Election-of-the-King"><a href="#F-Election-of-the-King" class="headerlink" title="F Election of the King"></a><a href="https://ac.nowcoder.com/acm/contest/57358/F">F Election of the King</a></h2><p>题意：有n个人，每个人有一个立场，从小到大分别代表极左到极右。每次投票将选择一个人退出， 每个人的选择策略是选择和自己立场相差最大的，若存在多个人立场相差最大的，优先选择靠右的，问最终剩下那些人。</p><p>解法：将每个人按照立场和位置排序，左指针初始值为1，右指针初始值为n，二分查找第一个投给左边的人的位置，然后求出投给左端点和右端点的人数个数，将票数较多的人和相同持方的人淘汰。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> qx;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(node x,node  y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x.qx==y.qx) <span class="keyword">return</span> x.id&lt;y.id;</span><br><span class="line">    <span class="keyword">return</span> x.qx&lt;y.qx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> now)</span><span class="comment">//这个人投给左边返回true，否则返回false</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a=<span class="built_in">abs</span>(l-now);</span><br><span class="line">    <span class="type">int</span> b=<span class="built_in">abs</span>(r-now);</span><br><span class="line">    <span class="keyword">if</span>(a&gt;b) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="built_in">rep</span>(i,<span class="number">1</span>,n)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;a[i].qx;</span><br><span class="line">        a[i].id=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+n,cmp);</span><br><span class="line">    a[<span class="number">0</span>]=a[<span class="number">1</span>];</span><br><span class="line">    a[n+<span class="number">1</span>]=a[n];</span><br><span class="line">    <span class="type">int</span> l=<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> r=n;</span><br><span class="line">    <span class="keyword">while</span>(a[l].qx!=a[r].qx)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> high=r;</span><br><span class="line">        <span class="type">int</span> low=l;</span><br><span class="line">        <span class="type">int</span> pos=<span class="number">-1</span>;<span class="comment">//第一个投给左边的人</span></span><br><span class="line">        <span class="keyword">while</span>(low&lt;=high)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> mid=low+(high-low)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">check</span>(a[l].qx,a[r].qx,a[mid].qx))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(mid==l||!<span class="built_in">check</span>(a[l].qx,a[r].qx,a[mid<span class="number">-1</span>].qx))</span><br><span class="line">                &#123;pos=mid;<span class="keyword">break</span>;&#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    high=mid<span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                low=mid+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> nowl=l;</span><br><span class="line">        <span class="type">int</span> nowr=r;</span><br><span class="line">        <span class="keyword">if</span>(pos==<span class="number">-1</span>) <span class="comment">//没有人投给左边</span></span><br><span class="line">        &#123;<span class="keyword">while</span>(a[r].qx==a[nowr].qx)r--;<span class="keyword">continue</span>;&#125;</span><br><span class="line">        <span class="type">int</span> antir=pos-l;<span class="comment">//反对右边的人数</span></span><br><span class="line">        <span class="type">int</span> antil=r-pos+<span class="number">1</span>;<span class="comment">//反对左边的人数</span></span><br><span class="line">        <span class="keyword">if</span>(antil&gt;antir)</span><br><span class="line">        &#123;<span class="keyword">while</span>(a[l].qx==a[nowl].qx)l++;&#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;<span class="keyword">while</span>(a[r].qx==a[nowr].qx)r--;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;a[l].id&lt;&lt;<span class="string">&quot;\n&quot;</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="L-We-are-the-Lights"><a href="#L-We-are-the-Lights" class="headerlink" title="L We are the Lights"></a><a href="https://ac.nowcoder.com/acm/contest/57358/L">L We are the Lights</a></h2><p>题意：每次选择一行或者一列全部打开或全部关闭，求最终亮着的等的数量。</p><p>解法：可以发现后面的操作会覆盖前面的，所以只要从后向前，记录操作过的行和列，每次操作更新答案即可，重复操作直接忽略。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n, m, q;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; q;</span><br><span class="line"><span class="built_in">rep</span>(i, <span class="number">1</span>, q)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; cz[i] &gt;&gt; ii[i] &gt;&gt; op[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">set&lt;<span class="type">int</span>&gt; coloff, colon, rowoff, rowon;</span><br><span class="line">    unordered_map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; vis1, vis2;</span><br><span class="line"><span class="keyword">while</span> (q)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (cz[q][<span class="number">0</span>] == <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (op[q][<span class="number">1</span>] == <span class="string">&#x27;n&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!rowoff.<span class="built_in">count</span>(ii[q]) &amp;&amp; !vis1[ii[q]])&#123;</span><br><span class="line">rowon.<span class="built_in">insert</span>(ii[q]);</span><br><span class="line">                    ans += m - coloff.<span class="built_in">size</span>() - colon.<span class="built_in">size</span>();</span><br><span class="line">&#125;</span><br><span class="line">                </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!rowon.<span class="built_in">count</span>(ii[q]) &amp;&amp; !vis1[ii[q]])&#123;</span><br><span class="line">                    rowoff.<span class="built_in">insert</span>(ii[q]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">            vis1[ii[q]] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (op[q][<span class="number">1</span>] == <span class="string">&#x27;n&#x27;</span>)<span class="comment">//on</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!coloff.<span class="built_in">count</span>(ii[q]) &amp;&amp; !vis2[ii[q]])&#123;</span><br><span class="line">colon.<span class="built_in">insert</span>(ii[q]);</span><br><span class="line">                    ans += n - rowoff.<span class="built_in">size</span>() - rowon.<span class="built_in">size</span>();</span><br><span class="line">&#125;</span><br><span class="line">                </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!colon.<span class="built_in">count</span>(ii[q]) &amp;&amp; !vis2[ii[q]])&#123;</span><br><span class="line">                    coloff.<span class="built_in">insert</span>(ii[q]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">            vis2[ii[q]] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">        q --;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="J-Qu’est-ce-Que-C’est"><a href="#J-Qu’est-ce-Que-C’est" class="headerlink" title="J Qu’est-ce Que C’est?"></a><a href="https://ac.nowcoder.com/acm/contest/57358/J">J Qu’est-ce Que C’est?</a></h2><p>题意：求所有（长度大于等于2的区间和非负）的数组数量，每个数的范围是$[-m,m]$,长度为n。</p><p>思路：除了最后一个位置，其余位置的负数一定与正数绑定，将负数后的正数与该负数绑定，考虑填充$f[i][j]$,表示前i个数,最后一个块的和为j的方案数。</p><p>考虑如下转移：</p><p>​    当前位置非负：$f[i][j]=sum(f[i-1][k]),(0&lt;=k&lt;=m)$</p><p>​    当前位置为（负正）：$f[i][j]=sum(f[i-2][k]*(min(k,j-m))),(0&lt;=k&lt;=m)$</p><p>以下为暴力代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">5000</span>, P = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">int</span> f[N + <span class="number">5</span>][N + <span class="number">5</span>], g[N + <span class="number">5</span>][N + <span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">f[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= m; i++)</span><br><span class="line">f[<span class="number">1</span>][i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= m; j++)</span><br><span class="line">f[<span class="number">2</span>][i] = (f[<span class="number">2</span>][i] + f[<span class="number">1</span>][j]) % P;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = -m; k &lt;= <span class="number">-1</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> res = i - k;</span><br><span class="line"><span class="keyword">if</span> (res &lt;= m &amp;&amp; res &gt;= <span class="number">0</span>)</span><br><span class="line">f[<span class="number">2</span>][i] = (f[<span class="number">2</span>][i] + <span class="number">1</span>) % P;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">3</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt;= m; k++)</span><br><span class="line">f[i][j] = (f[i][j] + f[i - <span class="number">1</span>][k]) % P;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt;= m; k++)</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> l = -k; l &lt;= <span class="number">-1</span>; l++) <span class="comment">// 枚举负数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> res = j - l;</span><br><span class="line"><span class="keyword">if</span> (res &lt;= m)</span><br><span class="line">f[i][j] = (f[i][j] + f[i - <span class="number">2</span>][k]) % P;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="comment">// 最后一个数字可以填负数，需要单独考虑</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= m; i++)</span><br><span class="line">ans = (ans + f[n][i] + (<span class="type">long</span> <span class="type">long</span>)f[n - <span class="number">1</span>][i] * i) % P;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>优化$f[i][j]$的前缀和和$j*f[i][j]$的后，即可在$O(n^2)$的复杂度内通过</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">5000</span>, P = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">int</span> f[N + <span class="number">5</span>][N + <span class="number">5</span>], g[N + <span class="number">5</span>][N + <span class="number">5</span>];</span><br><span class="line"><span class="comment">// f表示直接的前缀和，g表示i*f的前缀和</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="number">2</span> * m + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">f[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">f[<span class="number">1</span>][i] = i + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (i)</span><br><span class="line">g[<span class="number">1</span>][i] = (g[<span class="number">1</span>][i - <span class="number">1</span>] + i) % P;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= m; i++)</span><br><span class="line">&#123;f[<span class="number">2</span>][i] = <span class="number">2</span> * m - i + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (i)</span><br><span class="line">&#123;</span><br><span class="line">g[<span class="number">2</span>][i] = (g[<span class="number">2</span>][i - <span class="number">1</span>] + (<span class="type">long</span> <span class="type">long</span>)f[<span class="number">2</span>][i] * i) % P;</span><br><span class="line">f[<span class="number">2</span>][i] = (f[<span class="number">2</span>][i - <span class="number">1</span>] + f[<span class="number">2</span>][i]) % P;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">3</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= m; j++)</span><br><span class="line">f[i][j] = (f[i - <span class="number">1</span>][m] + g[i - <span class="number">2</span>][m - j] + (<span class="type">long</span> <span class="type">long</span>)(m - j) * (f[i - <span class="number">2</span>][m]</span><br><span class="line">- f[i - <span class="number">2</span>][m - j] + P) % P) % P;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">g[i][j] = (g[i][j - <span class="number">1</span>] + (<span class="type">long</span> <span class="type">long</span>)f[i][j] * j) % P;</span><br><span class="line">f[i][j] = (f[i][j - <span class="number">1</span>] + f[i][j]) % P;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 最后一位特判</span></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> ans = (f[n][m] + g[n - <span class="number">1</span>][m]) % P;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>杭电多校4</title>
      <link href="/undefined/33082.html"/>
      <url>/undefined/33082.html</url>
      
        <content type="html"><![CDATA[<h2 id="1006-PSO"><a href="#1006-PSO" class="headerlink" title="1006 PSO"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=7317">1006 PSO</a></h2><p>题意：给定一个菊花图，求任意选择两个点之间距离的期望。</p><p>做法：考虑距离为1的点对数量，再算出距离为2的点对数量，求加权平均数即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">2</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.9lf %.9lf\n&quot;</span>, (db)<span class="number">1</span>, (db)<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    db ans = <span class="number">0.0</span>;</span><br><span class="line">    ans += <span class="number">1.0</span> * (n - <span class="number">1</span>) * (n - <span class="number">2</span>) + n - <span class="number">1</span>;</span><br><span class="line">    db e = ans / (n - <span class="number">1</span> + (n - <span class="number">1</span>) * (n - <span class="number">2</span>) / <span class="number">2</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.9lf %.9lf\n&quot;</span>, e, (db)<span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1010-Kong-Ming-Qi"><a href="#1010-Kong-Ming-Qi" class="headerlink" title="1010 Kong Ming Qi"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=7321">1010 Kong Ming Qi</a></h2><p>题意：给定一个$(n+2)<em>(n+2)$的棋盘，中间$n</em>n$部分有棋子，棋子的移动规则参考孔明棋。（每次可以选择一个棋子，然后选择四个方向之一：上、下、左或右。将棋子从其原始位置沿所选方向移动一个网格。除上述要求外，还必须满足以下条件：在原始位置和目标位置之间的中间位置上必须有棋子，目标位置不得有棋子。所有位置必须在棋盘上。移动后，中间位置上的棋子被拿走。）</p><p>求最终剩下的棋子数量最少为多少。</p><p>做法：特判1和3的情况，除了这两种情况外可以保证拿到只剩1个子。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">if</span>(n &gt; m) <span class="built_in">swap</span>(n, m);</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">1</span>)&#123;</span><br><span class="line">        cout &lt;&lt; (m + <span class="number">1</span>) / <span class="number">2</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(m % <span class="number">3</span> == <span class="number">0</span> || n % <span class="number">3</span> == <span class="number">0</span>)&#123;</span><br><span class="line">        cout &lt;&lt; <span class="number">2</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1010-Kong-Ming-Qi-1"><a href="#1010-Kong-Ming-Qi-1" class="headerlink" title="1010 Kong Ming Qi"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=7321">1010 Kong Ming Qi</a></h2><p>题意：给定一个$(n+2)<em>(n+2)$的棋盘，中间$n</em>n$部分有棋子，棋子的移动规则参考孔明棋。（每次可以选择一个棋子，然后选择四个方向之一：上、下、左或右。将棋子从其原始位置沿所选方向移动一个网格。除上述要求外，还必须满足以下条件：在原始位置和目标位置之间的中间位置上必须有棋子，目标位置不得有棋子。所有位置必须在棋盘上。移动后，中间位置上的棋子被拿走。）</p><p>求最终剩下的棋子数量最少为多少。</p><p>做法：特判1和3的情况，除了这两种情况外可以保证拿到只剩1个子。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">if</span>(n &gt; m) <span class="built_in">swap</span>(n, m);</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">1</span>)&#123;</span><br><span class="line">        cout &lt;&lt; (m + <span class="number">1</span>) / <span class="number">2</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(m % <span class="number">3</span> == <span class="number">0</span> || n % <span class="number">3</span> == <span class="number">0</span>)&#123;</span><br><span class="line">        cout &lt;&lt; <span class="number">2</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1012-a-b-Problem"><a href="#1012-a-b-Problem" class="headerlink" title="1012  a-b Problem"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=7323">1012  a-b Problem</a></h2><p>题意：给定n个物品，每个物品对alice和bob有不同的价值，两个人都希望二人的价值的差尽可能大，求最优策略下二人获得的价值之差。</p><p>解法：要获得最大价值差，就每次选择对二者价值之和最大的物品，可以同时保证自己尽可能大和对方尽可能小。按照该方法排序后模拟即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="type">int</span> b;</span><br><span class="line"><span class="type">int</span> c;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(node x,node y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x.c&lt;y.c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="built_in">rep</span>(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;a[i].a&gt;&gt;a[i].b;</span><br><span class="line">a[i].c=a[i].a+a[i].b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+n,cmp);</span><br><span class="line"><span class="type">int</span> aa=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> bb=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> r=n;</span><br><span class="line"><span class="built_in">rep</span>(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i%<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">aa+=a[r].a;</span><br><span class="line">r--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">bb+=a[r].b;</span><br><span class="line">r--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;aa-bb&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1003-Simple-Set-Problem"><a href="#1003-Simple-Set-Problem" class="headerlink" title="1003 Simple Set Problem"></a><a href="http://acm.hdu.edu.cn/contest/problem?cid=1097&amp;pid=1003">1003 Simple Set Problem</a></h2><p>题意：给定 k个非空的集合，每个集合仅包含绝对值不超过 $10^9$ 的整数。从每个集合中选择一个数字，组成长度为k的集合，求该集合中，最大值减最小值的差。</p><p>解法：将每个数字和对应所在集合存入数组中，按照大小进行排序，然后利用尺取法，移动右指针至满足每个集合都被取到的条件后移动左指针至最后一个满足条件的位置，更新答案，重复以上步骤至获得答案，排序复杂度为$n<em>log(n)$ ，尺取复杂度为$2</em>n$，本题卡常，不能用set求解。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    n = <span class="number">0</span>;</span><br><span class="line">    vector&lt;pii&gt; v;</span><br><span class="line">    cin &gt;&gt; k;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; k; i ++) cnt[i] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; k; i ++) &#123;</span><br><span class="line">        cin &gt;&gt; c;</span><br><span class="line">        n += c;</span><br><span class="line">        <span class="keyword">while</span> (c --) &#123;</span><br><span class="line">            <span class="type">int</span> x; cin &gt;&gt; x;</span><br><span class="line">            v.<span class="built_in">push_back</span>(&#123;x, i&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(v.<span class="built_in">begin</span>(), v.<span class="built_in">end</span>());</span><br><span class="line">    deque&lt;<span class="type">int</span>&gt; dq;</span><br><span class="line">    <span class="type">int</span> count = <span class="number">0</span>, idx = <span class="number">0</span>, res = <span class="number">2e9</span>;</span><br><span class="line">    <span class="keyword">while</span> (idx &lt; n) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!cnt[v[idx].bb]) count ++;</span><br><span class="line">        dq.<span class="built_in">push_front</span>(idx);</span><br><span class="line">        cnt[v[idx].bb] ++;</span><br><span class="line">        idx ++;</span><br><span class="line">        <span class="keyword">if</span> (count &lt; k) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">while</span> (cnt[v[dq.<span class="built_in">back</span>()].bb] &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            cnt[v[dq.<span class="built_in">back</span>()].bb] --;</span><br><span class="line">            dq.<span class="built_in">pop_back</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        res = <span class="built_in">min</span>(res, v[dq.<span class="built_in">front</span>()].aa - v[dq.<span class="built_in">back</span>()].aa);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>新生答疑（纯主观个人向）</title>
      <link href="/undefined/30534.html"/>
      <url>/undefined/30534.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-要不要办卡（学生卡）"><a href="#1-要不要办卡（学生卡）" class="headerlink" title="1.要不要办卡（学生卡）"></a>1.要不要办卡（学生卡）</h2><p>​        学生卡不是必须品！<br>​        学生卡基本等于流量卡，包含100多G的流量，同时包含你在学校的宽带套餐。如果你流量够用完全可以不办。</p><h2 id="2-要不要带证件照"><a href="#2-要不要带证件照" class="headerlink" title="2.要不要带证件照"></a>2.要不要带证件照</h2><p>​        建议带若干一寸两寸，实际上除了学生证需要外暂时还没用到过。必须准备电子版本的证件照，各种颜色的底都准备几份，用到电子证件照的频率远高于实体证件照，而且寝室楼内的打印机可以直接打印。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>牛客多校3</title>
      <link href="/undefined/64355.html"/>
      <url>/undefined/64355.html</url>
      
        <content type="html"><![CDATA[<h2 id="H-Until-the-Blue-Moon-Rises"><a href="#H-Until-the-Blue-Moon-Rises" class="headerlink" title="H.Until the Blue Moon Rises"></a><a href="https://ac.nowcoder.com/acm/contest/57357/H">H.Until the Blue Moon Rises</a></h2><p>题意：给定n个数，每次可以选择两个数ai和aj，让 $ A_i=A_i+1,A_j=A_j−1 $,问能否在若干次操作后，让所有数都变成质数。</p><p>思路：转变题意为将sum拆分为n个质数，先考虑拆分出n-2个2，省下的数字如果是大于4的偶数，那么根据哥德巴赫猜想，必定可以分割为两个质数，否则将前面的一个2变成3，转变为偶数。</p><p>特判能否能拆分以及n为1时候的情况。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isprim</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x == <span class="number">1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>; i * i &lt;= x; i ++)&#123;</span><br><span class="line"><span class="keyword">if</span>(x % i == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line">cin&gt;&gt;x;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">isprim</span>(x))</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;Yes\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;No\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">rep</span>(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line">cin&gt;&gt;x;</span><br><span class="line">sum+=x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sum&lt;<span class="number">2</span>*n)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;No\n&quot;</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sum%<span class="number">2</span>==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;Yes\n&quot;</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        sum-=<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isprim</span>(sum))</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;Yes\n&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;No\n&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Yes\n&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D-Ama-no-Jaku"><a href="#D-Ama-no-Jaku" class="headerlink" title="D Ama no Jaku"></a><a href="https://ac.nowcoder.com/acm/contest/57357/D">D Ama no Jaku</a></h2><p>题意：给定一个n*n的01矩阵，每次可以选择一行或一列进行翻转，求最少翻转几次可以让行的最小值（）大于等于列的最大值。</p><p>思路：考虑满足条件的矩阵的形状，只可能为全0或全1，所以开始考虑将矩阵变为全0或全1的最小步数。</p><p>先将第一行变为全0或者全1，并记录需要改变的列，遍历剩下的每行，查看在修改对应列后是否满足全0或全1的条件，如果和第一行状态不同还需要多计数。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="built_in">mem</span>(vis,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">rep</span>(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">rep</span>(j,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> x;</span><br><span class="line">cin&gt;&gt;x;</span><br><span class="line">ch[i][j]=x-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> i=<span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> ans0=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> ans1=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">rep</span>(j,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(ch[i][j]==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">vis[j]=<span class="number">1</span>;</span><br><span class="line">ans1++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ans0=n-ans1;</span><br><span class="line"><span class="keyword">if</span>(ans1==n)</span><br><span class="line">&#123;</span><br><span class="line">ans1=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">if</span>(ans0==n)</span><br><span class="line">&#123;</span><br><span class="line">ans0=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> ans3=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> ans4=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">rep</span>(i,<span class="number">2</span>,n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">rep</span>(j,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(vis[j])sum+=ch[i][j];</span><br><span class="line"><span class="keyword">else</span> sum+=<span class="number">1</span>-ch[i][j];</span><br><span class="line"><span class="comment">//debug(sum);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sum!=<span class="number">0</span>&amp;&amp;sum!=n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//debug(i);</span></span><br><span class="line">cout&lt;&lt;<span class="string">&quot;-1\n&quot;</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sum==n)</span><br><span class="line">&#123;</span><br><span class="line">ans3++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ans4=(n<span class="number">-1</span>)-ans3;</span><br><span class="line"><span class="type">int</span> ans5=<span class="built_in">min</span>(ans0+ans3,ans1+<span class="number">1</span>+ans4);</span><br><span class="line"><span class="type">int</span> ans6=<span class="built_in">min</span>(ans1+ans3,ans0+<span class="number">1</span>+ans4);</span><br><span class="line">cout&lt;&lt;<span class="built_in">min</span>(ans5,ans6)&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="A-World-Fragments-I"><a href="#A-World-Fragments-I" class="headerlink" title="A World Fragments I"></a><a href="https://ac.nowcoder.com/acm/contest/57357/A">A World Fragments I</a></h2><p>题意：给定两个二进制数，对第一个数进行操作，每次操作可以提取二进制数中的一位数字，加或减去这个数字，求让第一个数变成第二个数的最小操作次数。</p><p>思路：特判一下初始数为0，否则直接输出两数之差，纯纯的签到。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="type">int</span> n = a.<span class="built_in">size</span>(), m = b.<span class="built_in">size</span>();</span><br><span class="line">    <span class="type">int</span> aa = <span class="number">0</span>, bb = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++)&#123;</span><br><span class="line">        aa *= <span class="number">2</span>;</span><br><span class="line">        aa += a[i] -<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i ++)&#123;</span><br><span class="line">        bb *= <span class="number">2</span>;</span><br><span class="line">        bb += b[i] -<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(aa == <span class="number">0</span> &amp;&amp; bb != <span class="number">0</span>)&#123;</span><br><span class="line">        cout &lt;&lt; <span class="number">-1</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">abs</span>(aa - bb) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="J-Fine-Logic"><a href="#J-Fine-Logic" class="headerlink" title=" J.Fine Logic"></a><a href="https://ac.nowcoder.com/acm/contest/57357/J"> J.Fine Logic</a></h2><p>题意：a赢b的定义为，在任意榜单上位次更高。现给出n组赢关系，求最小的榜单数，满足所有的赢关系。</p><p>思路：根据赢关系建立有向图，检查是否为DAG，如果为DAG则按照拓扑序输出。</p><p>如果有环，则只需给出两个榜单，其中一个为1到n，另一个为n到1，即可满足所有赢关系。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">topo</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!qu.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        ++cnt;</span><br><span class="line">        <span class="type">int</span> u=qu.<span class="built_in">front</span>();qu.<span class="built_in">pop</span>();</span><br><span class="line">        ans.<span class="built_in">push_back</span>(u);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;v:nex[u])</span><br><span class="line">        &#123;</span><br><span class="line">            --du[v];</span><br><span class="line">            <span class="keyword">if</span>(!du[v]) qu.<span class="built_in">push</span>(v);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt==n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m;cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a,b;cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        nex[a].<span class="built_in">push_back</span>(b);</span><br><span class="line">        ++du[b];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) </span><br><span class="line">    <span class="keyword">if</span>(!du[i]) qu.<span class="built_in">push</span>(i);</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">topo</span>(n))</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="number">1</span>&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;p:ans) cout&lt;&lt;p&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="number">2</span>&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) cout&lt;&lt;i&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        cout&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=n;i&gt;=<span class="number">1</span>;--i) cout&lt;&lt;i&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 牛客多校 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杭电多校3</title>
      <link href="/undefined/17275.html"/>
      <url>/undefined/17275.html</url>
      
        <content type="html"><![CDATA[<h2 id="1004-Chaos-Begin"><a href="#1004-Chaos-Begin" class="headerlink" title="1004 Chaos Begin"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=7303">1004 Chaos Begin</a></h2><p>题意：给定$2*n$个点，有一半的点为初始点，另一半为初始点平移$(Δx,Δy)$后得到，求可能的$(Δx,Δy)$。</p><p>思路：如果$(dx,dy)$满足条件，那么$(-dx,-dy)$肯定也满足条件。</p><p>假做法：先假定$dx&gt;=0$，那么横坐标最小的点一定是变化前的点，将其与其他$(2*n-1)$个点作差，得到可能的$(Δx,Δy)$，然后从小到大遍历每个点，如果该点没被访问过且不存在存在$(x+Δx,y+Δy)$也没被访问过，说明当前的$(Δx,Δy)$不合法。这个方案会被重合的点，多点共线的时候卡到$O(n^2log(n))$,但是题目说明数据随机，所以以下做法可以通过此题。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line">n*=<span class="number">2</span>;</span><br><span class="line">vector&lt;pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;&gt;<span class="built_in">p</span>(n);</span><br><span class="line"><span class="built_in">rep</span>(i,<span class="number">0</span>,n<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;p[i].fi;</span><br><span class="line">cin&gt;&gt;p[i].se;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(p.<span class="built_in">begin</span>(),p.<span class="built_in">end</span>());</span><br><span class="line">map&lt;pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;,<span class="type">int</span>&gt;f;</span><br><span class="line">vector&lt;pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;&gt; ans;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:p)f[v]++;</span><br><span class="line"><span class="built_in">rep</span>(i,<span class="number">1</span>,n<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> dx=p[i].fi-p[<span class="number">0</span>].fi;</span><br><span class="line"><span class="type">int</span> dy=p[i].se-p[<span class="number">0</span>].se;</span><br><span class="line">vector&lt;pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;&gt; tmp;</span><br><span class="line"><span class="type">bool</span> flag=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">rep</span>(j,<span class="number">0</span>,n<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(f[p[j]])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(f[&#123;p[j].fi+dx,p[j].se+dy&#125;])</span><br><span class="line">&#123;</span><br><span class="line">f[&#123;p[j].fi+dx,p[j].se+dy&#125;]--;</span><br><span class="line">f[p[j]]--;</span><br><span class="line">tmp.<span class="built_in">pb</span>(p[j]);</span><br><span class="line">tmp.<span class="built_in">pb</span>(&#123;p[j].fi+dx,p[j].se+dy&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:tmp) f[v]++;<span class="comment">//恢复初始化</span></span><br><span class="line">flag=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="keyword">continue</span>;</span><br><span class="line">ans.<span class="built_in">pb</span>(&#123;dx,dy&#125;);</span><br><span class="line">ans.<span class="built_in">pb</span>(&#123;-dx,-dy&#125;);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:tmp) f[v]++;<span class="comment">//恢复初始化</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(ans.<span class="built_in">begin</span>(),ans.<span class="built_in">end</span>());</span><br><span class="line"><span class="type">int</span> len=<span class="built_in">unique</span>(ans.<span class="built_in">begin</span>(),ans.<span class="built_in">end</span>())-ans.<span class="built_in">begin</span>();</span><br><span class="line">cout&lt;&lt;len&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;len;i++)cout&lt;&lt;ans[i].first&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;ans[i].second&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>真做法：来源于官方题解，代码待补充。</p><p>考虑原始n个点的凸包，将它复制一份，沿着向量$(∆x,∆y)$平移的过程将会拉扯出两条 平行边，边的两端点恰好对应平移前后的一对点，且差值为$(∆x,∆y)$。这启发我们找到输入的 2n 个点的凸包，枚举凸包上的一条边，再枚举边上的两个点，作差得到一个可能的(∆x,∆y)， 检查它是否合法。由于点的坐标在给定的正方形范围内随机，因此一个点集的凸包的期望顶点 数为O(logn)，需要检查的次数也为$O(logn)$。 对于一个待检查的$(∆x,∆y)$，如果 $(−∆x,−∆y)$ 检查过，则无需重复检查。否则不妨设 $∆x ≥0$ 且$∆y≥0$，找到2n个点中横坐标最小的点，如果有多个则取纵坐标最小的点，那么 它一定属于原始的n个点，将它$(x,y)$与$(x+∆x,y+∆y)$配对并删去，重复n次即可。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 杭电多校 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>牛客多校</title>
      <link href="/tags/index-1.html"/>
      <url>/tags/index-1.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>杭电多校</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
